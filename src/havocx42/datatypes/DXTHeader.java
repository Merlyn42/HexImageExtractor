package havocx42.datatypes;

import havocx42.BinaryUtil;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

public class DXTHeader {
	public enum TextureType {DXT1,DXT5;
		public static TextureType convertFromUnity(int uf){
			if(uf==0xa){
				return DXT1;
			}
			if(uf==0xc){
				return DXT5;
			}
			throw new RuntimeException("Unknown Unity texture type: "+uf);
		}
	}
	public int width;
	public int height;
	public int size;
	public TextureType format;

	private static final byte[] EMPTY_HEADER = { 0x44, 0x44, 0x53, 0x20, 0x7c,
			0x00, 0x00, 0x00, 0x07, 0x10, 0x08, 0x00, 0x00, 0x02, 0x00, 0x00,
			0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00,
			0x00, 0x00, 0x44, 0x58, 0x54, 0x31, 0x18, 0x00, 0x00, 0x00, 0x00,
			0x00, -128, 0x00, 0x00, -128, 0x00, 0x00, -128, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00 };

	DXTHeader(int width, int height, int size,TextureType format) {
		this.width = width;
		this.height = height;
		this.size = size;
		this.format = format;
	}

	public byte[] toByteArray() {
		ByteArrayInputStream bis = new ByteArrayInputStream(EMPTY_HEADER);
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		try {
			byte[] intb = new byte[4];
			// mword
			bis.read(intb, 0, 0x4);
			bos.write(intb, 0, 0x4);
			// size
			bis.read(intb, 0, 0x4);
			bos.write(intb, 0, 0x4);
			// flags
			bis.read(intb, 0, 0x4);
			bos.write(intb, 0, 0x4);
			// height
			bis.skip(4);

			BinaryUtil.writeIntLE(bos, height);

			// width
			bis.skip(4);
			BinaryUtil.writeIntLE(bos, width);
			// size
			bis.skip(4);
			BinaryUtil.writeIntLE(bos, size);
			// firstblock
			byte[] firstBlock = new byte[0x3F];
			bis.read(firstBlock, 0, 0x3F);
			bos.write(firstBlock, 0, 0x3F);
			//format
			bis.skip(1);
			if(format==TextureType.DXT1){
				bos.write('1');
			}else{
				bos.write('5');
			}
			//second block
			byte[] secondBlock = new byte[0x28];
			bis.read(secondBlock, 0, 0x28);
			bos.write(secondBlock, 0, 0x28);
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return bos.toByteArray();
	}
}
